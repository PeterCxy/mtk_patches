From 1d4d337e58808de93f7e98f87986a58221052915 Mon Sep 17 00:00:00 2001
From: Peter Cai <peter@typeblog.net>
Date: Mon, 21 Oct 2019 17:02:25 +0800
Subject: [PATCH 1/2] RIL / DcTracker: add ro.radio.apn_force_cognitive

* Needed on some MTK devices

Change-Id: Iea0c10abc615c03cc0f989ebfaa0ff3196efe31e
Co-Authored-By: Pierre-Hugues Husson <phh@phh.me>
---
 src/java/com/android/internal/telephony/RIL.java           | 5 ++++-
 .../internal/telephony/dataconnection/DcTracker.java       | 7 ++++++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/src/java/com/android/internal/telephony/RIL.java b/src/java/com/android/internal/telephony/RIL.java
index 4e74cceee..d8bdccf7c 100644
--- a/src/java/com/android/internal/telephony/RIL.java
+++ b/src/java/com/android/internal/telephony/RIL.java
@@ -190,6 +190,8 @@ public class RIL extends BaseCommands implements CommandsInterface {
     volatile int mWlSequenceNum = 0;
     volatile int mAckWlSequenceNum = 0;
 
+    final boolean mApnForceCognitive;
+
     @UnsupportedAppUsage
     SparseArray<RILRequest> mRequestList = new SparseArray<RILRequest>();
     static SparseArray<TelephonyHistogram> mRilTimeHistograms = new
@@ -601,6 +603,7 @@ public class RIL extends BaseCommands implements CommandsInterface {
         mRILDefaultWorkSource = new WorkSource(context.getApplicationInfo().uid,
                 context.getPackageName());
         mActiveWakelockWorkSource = new WorkSource();
+        mApnForceCognitive = SystemProperties.getBoolean("ro.radio.apn_force_cognitive", false);
 
         TelephonyDevController tdc = TelephonyDevController.getInstance();
         tdc.registerRIL(this);
@@ -3925,7 +3928,7 @@ public class RIL extends BaseCommands implements CommandsInterface {
                     for (DataProfile dp : dps) {
                         // For v1.0 to v1.2, we only send data profiles that has the persistent
                         // (a.k.a modem cognitive) bit set to true.
-                        if (dp.isPersistent()) {
+                        if (dp.isPersistent() | mApnForceCognitive) {
                             dpis.add(convertToHalDataProfile10(dp));
                         }
                     }
diff --git a/src/java/com/android/internal/telephony/dataconnection/DcTracker.java b/src/java/com/android/internal/telephony/dataconnection/DcTracker.java
index 7a4bfd8d3..52a38d956 100644
--- a/src/java/com/android/internal/telephony/dataconnection/DcTracker.java
+++ b/src/java/com/android/internal/telephony/dataconnection/DcTracker.java
@@ -324,6 +324,8 @@ public class DcTracker extends Handler {
     private final LocalLog mDataRoamingLeakageLog = new LocalLog(50);
     private final LocalLog mApnSettingsInitializationLog = new LocalLog(50);
 
+    private final boolean mApnForceCognitive;
+
     private final BroadcastReceiver mIntentReceiver = new BroadcastReceiver () {
         @Override
         public void onReceive(Context context, Intent intent) {
@@ -733,6 +735,8 @@ public class DcTracker extends Handler {
         phone.getContext().getContentResolver().registerContentObserver(
                 Telephony.Carriers.CONTENT_URI, true, mApnObserver);
 
+        mApnForceCognitive = SystemProperties.getBoolean("ro.radio.apn_force_cognitive", false);
+
         initApnContexts();
 
         for (ApnContext apnContext : mApnContexts.values()) {
@@ -764,6 +768,7 @@ public class DcTracker extends Handler {
         mDataEnabledSettings = null;
         mTransportType = 0;
         mDataServiceManager = null;
+        mApnForceCognitive = false;
     }
 
     public void registerServiceStateTrackerEvents() {
@@ -1891,7 +1896,7 @@ public class DcTracker extends Handler {
 
         // profile id is only meaningful when the profile is persistent on the modem.
         int profileId = DATA_PROFILE_INVALID;
-        if (apnSetting.isPersistent()) {
+        if (apnSetting.isPersistent() | mApnForceCognitive) {
             profileId = apnSetting.getProfileId();
             if (profileId == DATA_PROFILE_DEFAULT) {
                 profileId = getApnProfileID(apnContext.getApnType());
-- 
2.23.0

